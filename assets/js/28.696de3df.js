(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{590:function(t,_,v){"use strict";v.r(_);var a=v(17),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"_1-8-种基本数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-种基本数据类型"}},[t._v("#")]),t._v(" 1) 8 种基本数据类型")]),t._v(" "),v("p",[t._v("boolean、char、byte、short、int、long、float、double")]),t._v(" "),v("p",[t._v("如果boolean是单独使用：boolean占4个字节。")]),t._v(" "),v("p",[t._v("如果boolean是以“boolean数组”的形式使用：boolean占1个字节。")]),t._v(" "),v("h2",{attrs:{id:"_2-整形中-byte、short、int、long-的取值范围"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-整形中-byte、short、int、long-的取值范围"}},[t._v("#")]),t._v(" 2) 整形中 byte、short、int、long 的取值范围")]),t._v(" "),v("p",[t._v("Primitive Types  相对的还有reference type")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Type")]),t._v(" "),v("th",[t._v("Byte")]),t._v(" "),v("th",[t._v("Range")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("byte")]),t._v(" "),v("td",[t._v("1")]),t._v(" "),v("td",[t._v("[-128, 127]")])]),t._v(" "),v("tr",[v("td",[t._v("short")]),t._v(" "),v("td",[t._v("2")]),t._v(" "),v("td",[t._v("[-32K, 32K]")])]),t._v(" "),v("tr",[v("td",[t._v("int")]),t._v(" "),v("td",[t._v("4")]),t._v(" "),v("td",[t._v("[-2B, 2B]")])]),t._v(" "),v("tr",[v("td",[t._v("long")]),t._v(" "),v("td",[t._v("8")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("float")]),t._v(" "),v("td",[t._v("4")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("double")]),t._v(" "),v("td",[t._v("8")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("char")]),t._v(" "),v("td",[t._v("2")]),t._v(" "),v("td",[t._v("A, B, C, ....")])]),t._v(" "),v("tr",[v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("1")]),t._v(" "),v("td",[t._v("true, false")])])])]),t._v(" "),v("h2",{attrs:{id:"_3-单精度和双精度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-单精度和双精度"}},[t._v("#")]),t._v(" 3）单精度和双精度")]),t._v(" "),v("p",[t._v("float数据占用32bit，double数据占用64bit；")]),t._v(" "),v("p",[t._v("float可以保证十进制科学计数法小数点后6位有效精度和第7位的部分精度")]),t._v(" "),v("p",[t._v("double可以保证十进制科学计数法小数点后15位有效精度和第16位的部分精度。")]),t._v(" "),v("h2",{attrs:{id:"_4-为什么不能使用-比较浮点数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么不能使用-比较浮点数"}},[t._v("#")]),t._v(" 4）为什么不能使用“==”比较浮点数")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("Float（32bit）和double（62bit）在存储方式上都是遵从IEEE（二进制浮点数算术标准）规范。")])]),t._v(" "),v("li",[v("p",[t._v("所以需要讲十进制的小数转成二进制储存")])]),t._v(" "),v("li",[v("p",[t._v("无论是单精度还是双精度在存储中都分为三个部分")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("符号位(Sign) : 0代表正，1代表为负")])]),t._v(" "),v("li",[v("p",[t._v("指数位（Exponent）:用于存储科学计数法中的指数数据，并且要加上偏移量（float偏移127，double偏移量1023）")])]),t._v(" "),v("li",[v("p",[t._v("尾数部分")]),t._v(" "),v("p",[t._v("尾数部分的储存，如果涉及到像0.9这样的小数，乘以二取小数部分一直在循环，尾数部分就类似无限循环小数一样，无穷尽。但是实际的尾数部分有储存限制，所以从二进制转回十进制的时候，会损失精度。")])])])])]),t._v(" "),v("p",[t._v("因此，浮点数储存的机制会带来精度损失的问题，再加上在硬件中传输的过程中也会损失一部分精度，所以其实储存在计算机中的浮点数其实是一个近似值，会不准。而用==判断时，只要不是完全相等，就会是假，所以用==判断可能会出错。")]),t._v(" "),v("blockquote",[v("p",[t._v("参考")]),t._v(" "),v("p",[t._v("https://www.cnblogs.com/xiehongfeng100/p/4851201.html")]),t._v(" "),v("p",[t._v("https://zhidao.baidu.com/question/139040882608359725.html")]),t._v(" "),v("p",[t._v("不是不能 而是不准")]),t._v(" "),v("p",[t._v("float是浮点数 存的是近似值")]),t._v(" "),v("p",[t._v("当用来表示0的时候")]),t._v(" "),v("p",[t._v("有可能计算结果是0，但是由于精度问题，实际上 存储的是一个和0很接近的值")]),t._v(" "),v("p",[t._v("而== 只要不是完全相等 就回是假")]),t._v(" "),v("p",[t._v("于是 用==判断float有可能出错。")]),t._v(" "),v("p",[t._v("一般都是判断差值的绝对值，低于某一个精度值，就可以认为是相等了。")])]),t._v(" "),v("h2",{attrs:{id:"_5-基本数据类型和包装类型的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-基本数据类型和包装类型的区别"}},[t._v("#")]),t._v(" 5）基本数据类型和包装类型的区别")]),t._v(" "),v("p",[t._v("Wrapper classes provide a way to use primitive data types (int, boolean, etc..) as objects.")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[v("strong",[t._v("Primitive Data Type")])]),t._v(" "),v("th",[v("strong",[t._v("Wrapper Class")])]),t._v(" "),v("th",[v("strong",[t._v("Super Class")])])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("byte")]),t._v(" "),v("td",[t._v("Byte")]),t._v(" "),v("td",[t._v("Number")])]),t._v(" "),v("tr",[v("td",[t._v("short")]),t._v(" "),v("td",[t._v("Short")]),t._v(" "),v("td",[t._v("Number")])]),t._v(" "),v("tr",[v("td",[t._v("int")]),t._v(" "),v("td",[t._v("Integer(重点学习)")]),t._v(" "),v("td",[t._v("Number")])]),t._v(" "),v("tr",[v("td",[t._v("long")]),t._v(" "),v("td",[t._v("Long")]),t._v(" "),v("td",[t._v("Number")])]),t._v(" "),v("tr",[v("td",[t._v("float")]),t._v(" "),v("td",[t._v("Float")]),t._v(" "),v("td",[t._v("Number")])]),t._v(" "),v("tr",[v("td",[t._v("double")]),t._v(" "),v("td",[t._v("Double")]),t._v(" "),v("td",[t._v("Number")])]),t._v(" "),v("tr",[v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[t._v("Object")])]),t._v(" "),v("tr",[v("td",[t._v("char")]),t._v(" "),v("td",[t._v("Character")]),t._v(" "),v("td",[t._v("Object")])])])]),t._v(" "),v("h2",{attrs:{id:"_6-自动拆箱与装箱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-自动拆箱与装箱"}},[t._v("#")]),t._v(" 6）自动拆箱与装箱")]),t._v(" "),v("p",[t._v("自动装箱：基本数据类型自动转换成包装类")]),t._v(" "),v("p",[t._v("自动拆箱：包装类自动转换成基本数据类型")]),t._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[t._v("    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//900是基本数据类型")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//x是包装类型")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本数据类型 --（自动转换）--\x3e 包装类型：自动装箱")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" x "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("900")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//x是包装类型")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//y是基本数据类型")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包装类型 --（自动转换）--\x3e 基本数据类型：自动拆箱")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      \n")])])]),v("h2",{attrs:{id:"_7-integer-的缓存机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-integer-的缓存机制"}},[t._v("#")]),t._v(" 7）Integer 的缓存机制")]),t._v(" "),v("p",[t._v('Java中为了提高程序的执行效率，将byte的取值范围[-128, 127]之间所有的包装对象提前创建好，\n放到了一个方法区的"整数型常量池"当中，目的是只要这个区间的数据不用在堆内存中new对象了，直接从整数型常量池中取出来用。\n源码： 在Integer 类中搜索\nprivate static class IntegerCache {\nInteger 类加载的时候，会初始化整数型常量池：256个对象。')]),t._v(" "),v("h2",{attrs:{id:"_8-基本数据类型的互相转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-基本数据类型的互相转换"}},[t._v("#")]),t._v(" 8）基本数据类型的互相转换")]),t._v(" "),v("p",[t._v("八种基本数据类型当中，除布尔类型之外，剩下的7种类型之间，都可以互相转换。")]),t._v(" "),v("h3",{attrs:{id:"_1-自动类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-自动类型转换"}},[t._v("#")]),t._v(" 1. 自动类型转换")]),t._v(" "),v("p",[t._v("小容量向大容量转换")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("byte < short < int < long < float < double\n        char < int < long < float < double\n")])])]),v("h4",{attrs:{id:"为什么float只占四个字节-但容量比long大"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么float只占四个字节-但容量比long大"}},[t._v("#")]),t._v(" 为什么float只占四个字节，但容量比long大？")]),t._v(" "),v("p",[t._v("整数在计算机底层采用补码的形式表示。除去首位的符号位，剩余的位数即表示数值的范围。")]),t._v(" "),v("p",[t._v("参考4）：浮点数采用IEEE（二进制浮点数算术标准）规范存储。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("精度")]),t._v(" "),v("th",[t._v("符号")]),t._v(" "),v("th",[t._v("阶/指数")]),t._v(" "),v("th",[t._v("尾数")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("单精度")]),t._v(" "),v("td",[t._v("1")]),t._v(" "),v("td",[t._v("8")]),t._v(" "),v("td",[t._v("23")])]),t._v(" "),v("tr",[v("td",[t._v("双精度")]),t._v(" "),v("td",[t._v("1")]),t._v(" "),v("td",[t._v("11")]),t._v(" "),v("td",[t._v("52")])])])]),t._v(" "),v("p",[t._v("8位代表指数位，8位最小是00000000，最大是11111111，范围也就是0~255，IEEE 754规范（0代表0，255代表无穷大，剩下的1~254，规定每个指数减去127，指数的范围就变成-126~127，而long的指数范围是0~63，结论：long的取值范围比float小）")]),t._v(" "),v("p",[t._v("参考：https://blog.51cto.com/u_15338624/3595612")]),t._v(" "),v("h3",{attrs:{id:"_2-强制类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-强制类型转换"}},[t._v("#")]),t._v(" 2. 强制类型转换")]),t._v(" "),v("p",[t._v("大容量转换成小容量")])])}),[],!1,null,null,null);_.default=e.exports}}]);