(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{581:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),a("p",[t._v("MySQL数据库最初是由瑞典MySQL AB公司开发，2008年1月16号被Sun公司收购。2009年，SUN又被Oracle收购。MySQL是目前IT行业最流行的开放源代码的数据库管理系统，同时它也是一个支持多线程高并发多用户的关系型数据库管理系统。MySQL之所以受到业界人士的青睐，主要是因为其具有以下几方面优点：")]),t._v(" "),a("h3",{attrs:{id:"_1-1-开放源代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-开放源代码"}},[t._v("#")]),t._v(" 1.1. 开放源代码")]),t._v(" "),a("p",[t._v("MySQL最强大的优势之一在于它是一个开放源代码的数据库管理系统。开源的特点是给予了用户根据自己需要修改DBMS的自由。MySQL采用了General Public License，这意味着授予用户阅读、修改和优化源代码的权利，这样即使是免费版的MySQL的功能也足够强大，这也是为什么MySQL越来越受欢迎的主要原因。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-跨平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-跨平台"}},[t._v("#")]),t._v(" 1.2. 跨平台")]),t._v(" "),a("p",[t._v("MySQL可以在不同的操作系统下运行，简单地说，MySQL可以支持Windows系统、UNIX系统、Linux系统等多种操作系统平台。这意味着在一个操作系统中实现的应用程序可以很方便地移植到其他的操作系统下。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-轻量级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-轻量级"}},[t._v("#")]),t._v(" 1.3. 轻量级")]),t._v(" "),a("p",[t._v("MySQL的核心程序完全采用多线程编程，这些线程都是轻量级的进程，它在灵活地为用户提供服务的同时，又不会占用过多的系统资源。因此MySQL能够更快速、高效的处理数据。")]),t._v(" "),a("h3",{attrs:{id:"_1-4-成本低"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-成本低"}},[t._v("#")]),t._v(" 1.4. 成本低")]),t._v(" "),a("p",[t._v("MySQL分为社区版和企业版，社区版是完全免费的，而企业版是收费的。即使在开发中需要用到一些付费的附加功能，价格相对于昂贵的Oracle、DB2等也是有很大优势的。其实免费的社区版也支持多种数据类型和正规的SQL查询语言，能够对数据进行各种查询、增加、删除、修改等操作，所以一般情况下社区版就可以满足开发需求了，而对数据库可靠性要求比较高的企业可以选择企业版。")]),t._v(" "),a("h2",{attrs:{id:"_2-常见命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见命令"}},[t._v("#")]),t._v(" 2. 常见命令")]),t._v(" "),a("p",[t._v("登陆mysql：")]),t._v(" "),a("ol",[a("li",[t._v("mysql -u用户名 -p密码")]),t._v(" "),a("li",[t._v("mysql -u用户名 -p")])]),t._v(" "),a("p",[t._v("连接远程的mysql：mysql -h主机地址 -P 端口号 -u用户名  -p密码")]),t._v(" "),a("p",[t._v("当前DBMS中，有哪些DB: show databases;")]),t._v(" "),a("p",[t._v("新建数据库：create database 名字;")]),t._v(" "),a("p",[t._v("新建数据库并指定编码方式：create database 数据库名 charset 编码名;")]),t._v(" "),a("p",[t._v("打开数据库：")]),t._v(" "),a("p",[t._v("删除数据库：drop database 名字;")]),t._v(" "),a("p",[t._v("创建表：create table 表名(字段名 数据类型);")]),t._v(" "),a("p",[t._v("删除表：drop table 表名;")]),t._v(" "),a("p",[t._v("展示当前库中所有的表：show tables;")]),t._v(" "),a("p",[t._v("添加一条数据：insert into 表名 values(字段的值);")]),t._v(" "),a("p",[t._v("查看表中的数据：select * from 表名;")]),t._v(" "),a("p",[t._v("数据库里没有char类型，只有字符串，quotes and double quotes都可以用。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rose"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mary'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("查看当前mysql的编码方式：show variables like 'character%';")]),t._v(" "),a("h2",{attrs:{id:"_3-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型"}},[t._v("#")]),t._v(" 3. 数据类型")]),t._v(" "),a("h3",{attrs:{id:"_3-1-整数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-整数类型"}},[t._v("#")]),t._v(" 3.1 整数类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Integer Type")]),t._v(" "),a("th",[t._v("Byte")]),t._v(" "),a("th",[t._v("Signed Number")]),t._v(" "),a("th",[t._v("Unsigned Number")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("TINYINT")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("[-128, 127]")]),t._v(" "),a("td",[t._v("[0, 255]")])]),t._v(" "),a("tr",[a("td",[t._v("SAMLLINT")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("[-32k, 32K]")]),t._v(" "),a("td",[t._v("[0, 65K]")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMINT")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("[-8M, 8M]")]),t._v(" "),a("td",[t._v("[0, 16M]")])]),t._v(" "),a("tr",[a("td",[t._v("INT或INTEGER")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("[-2B, 2B]")]),t._v(" "),a("td",[t._v("[0, 4B]")])]),t._v(" "),a("tr",[a("td",[t._v("BIGINT")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" inttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" zerofill\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("age int(4) unsigned zerofill")]),t._v(" "),a("p",[t._v("此字段必须存入无符号的数字，且输入值不满足4位数的时候，会自动用0填充。")]),t._v(" "),a("p",[t._v("age int(4)")]),t._v(" "),a("p",[t._v("没有unsigned zerofill，不会自动填充。")]),t._v(" "),a("h3",{attrs:{id:"_3-2-浮点型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-浮点型"}},[t._v("#")]),t._v(" 3.2 浮点型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Floating-point Type")]),t._v(" "),a("th",[t._v("Byte")]),t._v(" "),a("th",[t._v("Signed Number")]),t._v(" "),a("th",[t._v("Unsigned Number")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("FLOAT")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DOUBLE")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DECIMAL")]),t._v(" "),a("td",[t._v("对DECIMAL(M,D) ，如果M>D，为M+2；否则为D+2")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("DOUBLE(5, 3);")]),t._v(" "),a("p",[t._v("代表此字段有三位小数，5-3=2位整数，超过就会四舍五入。")]),t._v(" "),a("p",[t._v("若不加(M,D)，则【小数点后】可以存入最大宽度的值是：最大到16位，超过16位就会四舍五入。")]),t._v(" "),a("p",[t._v("DECIMAL(M,D)")]),t._v(" "),a("p",[t._v("M最大为65,D最大为30.")]),t._v(" "),a("p",[t._v("如果不加(M,D)，那么只会储存整数位，超过就会四舍五入。")]),t._v(" "),a("h3",{attrs:{id:"_3-3-日期时间类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-日期时间类型"}},[t._v("#")]),t._v(" 3.3 日期时间类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("大小 ( bytes)")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("范围")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("DATE")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1000-01-01/9999-12-31")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY-MM-DD")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("日期值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("TIME")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("'-838:59:59'/'838:59:59'")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("HH:MM:SS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("时间值或持续时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("YEAR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1901/2155")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("年份值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("DATETIME")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1000-01-01 00:00:00/9999-12-31 23:59:59")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("混合日期和时间值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("TIMESTAMP")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1970-01-01 00:00:00/2038结束时间是第 "),a("strong",[t._v("2147483647")]),t._v(" 秒，北京时间 "),a("strong",[t._v("2038-1-19 11:14:07")]),t._v("，格林尼治时间 2038年1月19日 凌晨 03:14:07")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("YYYYMMDD HHMMSS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("混合日期和时间值，时间戳")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" datatest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" date1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" date2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" datatest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" datatest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date1               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date2               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+---------------------+")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("now()是mysql的函数，用于获取当前的时间。")])]),t._v(" "),a("p",[t._v("timestamp和datetime的区别：")]),t._v(" "),a("ul",[a("li",[t._v("timestamp范围比较小")]),t._v(" "),a("li",[t._v("timestamp和时区有关\n"),a("ul",[a("li",[t._v("show variables like 'time_zone';")]),t._v(" "),a("li",[t._v("set time_zone = '+9:00';")])])]),t._v(" "),a("li",[t._v("表中的第一个非空的timestamp字段如果插入和更新为NULL则会自动设置为系统时间(????? 我自己试了就是空啊。)")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-字符串类型"}},[t._v("#")]),t._v(" 3.4 字符串类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("大小")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("用途")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("CHAR(M)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-255 bytes,不指定默认char(1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("定长字符串(假设指定长度为10，哪怕字段值的长度是5，也还是占用10个字节)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("VARCHAR(M)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-65535 bytes,必须指定M")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("变长字符串(在指定范围内，用了多少占多少字节)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("BINARY(M)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-255 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("VARBINARY(M)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-65535 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("TINYBLOB")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-255 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不超过 255 个字符的二进制字符串")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("TINYTEXT")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-255 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("短文本字符串")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("BLOB")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-65 535 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("二进制形式的长文本数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("TEXT")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-65 535 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("长文本数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("MEDIUMBLOB")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-16 777 215 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("二进制形式的中等长度文本数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("MEDIUMTEXT")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-16 777 215 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("中等长度文本数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("LONGBLOB")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-4 294 967 295 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("二进制形式的极大文本数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("LONGTEXT")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0-4 294 967 295 bytes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("极大文本数据")])])])]),t._v(" "),a("ul",[a("li",[t._v("字符串类型char,varchar(M)")])]),t._v(" "),a("blockquote",[a("p",[t._v("char如果没有指定宽度，默认为1个字符")]),t._v(" "),a("p",[t._v("varchar(M)，必须指定宽度")])]),t._v(" "),a("ul",[a("li",[t._v("BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。")]),t._v(" "),a("li",[t._v("一般在保存少量字符串的时候，我们会选择char和varchar；而在保存较大文本时，通常会选择使用text或blob系列。blob和text值会引起一些性能问题，特别是在执行了大量的删除操作时，会在数据表中留下很大的“空洞”，为了提高性能，建议定期时候用optimize table功能对这类表进行碎片整理。可以使用合成的(Synthetic)索引来提高大文本字段的查询性能，如果需要对大文本字段进行模糊查询，MySql提供了前缀索引。但是仍然要在不必要的时候避免检索大型的blob或text值。")])]),t._v(" "),a("h4",{attrs:{id:"enum枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enum枚举类型"}},[t._v("#")]),t._v(" enum枚举类型")]),t._v(" "),a("p",[t._v("它的值范围需要在创建表时通过枚举方式显式指定，对于1~255个成员的枚举需要1个字节存储；对于255`65535个成员需要2个字节存储。例如：gender enum('男','女')。一次只能从枚举值中选择一个。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" enumtest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sex "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"女"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" enumtest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Query OK, 1 row affected (0.00 sec)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" enumtest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"金毛"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ERROR 1265 (01000): Data truncated for column 'sex' at row 1")]),t._v("\n")])])]),a("h4",{attrs:{id:"set集合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set集合类型"}},[t._v("#")]),t._v(" set集合类型")]),t._v(" "),a("p",[t._v("最多存放0~64个成员。一次可以从集合中选择多个成员。")]),t._v(" "),a("p",[t._v("如果选择了1-8个成员的集合，则依次占1个，2个，3个。。8个字节。？？？？")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" settest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  1=2^0  2=2^1  4      8           二进制")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hobby "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sleep"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eat"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"swim"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exercise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" settest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Judy"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sleep"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Query OK, 1 row affected (0.00 sec)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" settest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"V"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sleep,eat"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Query OK, 1 row affected (0.00 sec)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" settest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sleep,eat1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ERROR 1265 (01000): Data truncated for column 'hobby' at row 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" settest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Panam"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Query OK, 1 row affected (0.00 sec)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" hobby     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+-----------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Judy  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sleep     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" V     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("eat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Panam "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("eat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  3 = 1 + 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+-----------+")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-语法要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-语法要求"}},[t._v("#")]),t._v(" 4. 语法要求")]),t._v(" "),a("h3",{attrs:{id:"不区分大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不区分大小写"}},[t._v("#")]),t._v(" 不区分大小写")]),t._v(" "),a("p",[t._v("关键字和表名（函数名）不区分大小写。但是数据值是否区分大小写，与charset和其校对规则有关。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 显示mysql的校对规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- _ci 大小写不敏感")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- _cs 大小写敏感")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coll%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------+--------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Variable_name        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Value")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------+--------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collation_connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" utf8mb4_0900_ai_ci "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collation_database   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" utf8mb4_0900_ai_ci "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" collation_server     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" utf8mb4_0900_ai_ci "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------+--------------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"命名规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规则"}},[t._v("#")]),t._v(" 命名规则")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("尽量使用26个英文字母、数字0-9、下划线和美元符号，不要使用其他符号。")])]),t._v(" "),a("li",[a("p",[t._v("建议不要使用mysql的关键字等来作为表名、字段名等。如果需要使用，用`（飘号）将表名/字段名引起来。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Query OK, 0 rows affected (0.06 sec)")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("数据库和表名、字段名等对象名中间不要包含空格。")])]),t._v(" "),a("li",[a("p",[t._v("同一个mysql软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名。")])])]),t._v(" "),a("h3",{attrs:{id:"书写规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#书写规则"}},[t._v("#")]),t._v(" 书写规则")]),t._v(" "),a("h4",{attrs:{id:"标点符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标点符号"}},[t._v("#")]),t._v(" 标点符号")]),t._v(" "),a("ol",[a("li",[t._v("必须成对")]),t._v(" "),a("li",[t._v("必须英文状态下半角输入方式")]),t._v(" "),a("li",[t._v("字符串和日期类型可以使用单引号''")]),t._v(" "),a("li",[t._v('列的别名可以使用双引号""，给表名取别名不要使用双引号。取别名时as可以省略')]),t._v(" "),a("li",[t._v("如果列的别名没有包含空格，可以省略双引号，如果有空格双引号不能省略。")])]),t._v(" "),a("h4",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("ol",[a("li",[t._v("单行注释：#注释内容")]),t._v(" "),a("li",[t._v("单行注释：-- 注释内容    其中--后面的空格必须有")]),t._v(" "),a("li",[t._v("多行注释：/* 注释内容 */")])]),t._v(" "),a("h2",{attrs:{id:"_5-语言分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-语言分类"}},[t._v("#")]),t._v(" 5. 语言分类")]),t._v(" "),a("h3",{attrs:{id:"_5-1-ddl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-ddl"}},[t._v("#")]),t._v(" 5.1 DDL")]),t._v(" "),a("p",[t._v("Data Definition Language，数据定义语言，定义库，表结构等，包括create,drop,alter等。")]),t._v(" "),a("h4",{attrs:{id:"db"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db"}},[t._v("#")]),t._v(" DB")]),t._v(" "),a("p",[t._v("查看所有数据库")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("databases")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("新建数据库：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("database")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("database")]),t._v(" 数据库名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),t._v(" 编码名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- utf8, 在mysql中字符集名称不要使用utf-8")]),t._v("\n")])])]),a("p",[t._v("指定使用某个数据库")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("删除数据库：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("database")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" Table")]),t._v(" "),a("p",[t._v("创建表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  字段名 数据类型\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("展示当前库中所有的表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("删除表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#column"}},[t._v("#")]),t._v(" Column")]),t._v(" "),a("p",[t._v("查看某个表结构")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("describe")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("增加表的字段")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 新增字段到最后")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" 新增字段名 新增字段数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 新增字段到最前面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" 新增字段名 新增字段数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 新增字段到指定字段的后面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" 新增字段名 新增字段数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("after")]),t._v(" 表中字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("修改data type")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" 字段名 新数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("修改column_definition and data type")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 修改字段，然后移动到最后")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 change 旧字段名 新字段名 新字段数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 修改字段，然后移动到最前")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 change 旧字段名 新字段名 新字段数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 修改字段，然后移动到指定字段后")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 change 旧字段名 新字段名 新字段数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("after")]),t._v(" 表中字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" 新字段名 新数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("删除column")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("修改column的位置")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 移动到最前")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" 字段名 数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 移动到某字段后面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" 字段名 数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("after")]),t._v(" 表中字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("修改表名称")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 旧表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rename")]),t._v(" 新表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 旧表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" 新表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-2-dml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-dml"}},[t._v("#")]),t._v(" 5.2 DML")]),t._v(" "),a("p",[t._v("Data Manipulation Language，数据操作语言，增删改查数据，包括insert, delete, update, select等.")]),t._v(" "),a("h4",{attrs:{id:"添加数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加数据"}},[t._v("#")]),t._v(" 添加数据")]),t._v(" "),a("h5",{attrs:{id:"全部赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全部赋值"}},[t._v("#")]),t._v(" 全部赋值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要求值列表的顺序，个数，类型，要与表中字段对应。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"部分赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部分赋值"}},[t._v("#")]),t._v(" 部分赋值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要求值列表的顺序，个数，类型，与部分字段列表对应。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("部分字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("部分字段对应的值列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面这个用的比较多")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("字段值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("字段值…"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"批量添加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#批量添加"}},[t._v("#")]),t._v(" 批量添加")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("…"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"查询数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询数据"}},[t._v("#")]),t._v(" 查询数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询整张表的所有数据")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询部分列表")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名称 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名称 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("distinct对查询结果去重，放在select后面使用")])]),t._v(" "),a("h4",{attrs:{id:"修改数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改数据"}},[t._v("#")]),t._v(" 修改数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 新字段值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 新字段值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("如果没有加where条件，表示修改所有行，这个字段的值")])]),t._v(" "),a("h4",{attrs:{id:"删除数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[t._v("#")]),t._v(" 删除数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果没有where条件，则删除整张表的数据。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("用delete删除整张表和用truncate删除整张表的数据的区别？")]),t._v(" "),a("p",[t._v("（1）truncate速度快")]),t._v(" "),a("p",[t._v("（2）truncate无法回滚")]),t._v(" "),a("p",[t._v("truncate因为底层是把表drop掉，然后新建了一张空表。")]),t._v(" "),a("p",[t._v("delete因为底层是一行一行删数据，效率较慢。")]),t._v(" "),a("h4",{attrs:{id:"对表中字段起别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对表中字段起别名"}},[t._v("#")]),t._v(" 对表中字段起别名")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 起别名时，as都可以省略")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 别名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 别名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('-- 如果字段别名中没有空格或关键字，那么可以省略quotes""')]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-3-dql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-dql"}},[t._v("#")]),t._v(" 5.3 DQL")]),t._v(" "),a("p",[t._v("Data Query Language，数据查询语言 select。")]),t._v(" "),a("h3",{attrs:{id:"_5-4-dcl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-dcl"}},[t._v("#")]),t._v(" 5.4 DCL")]),t._v(" "),a("p",[t._v("Data Control Language，数据控制语言，权限，事务等管理。")]),t._v(" "),a("p",[t._v("登陆mysql：")]),t._v(" "),a("ol",[a("li",[t._v("mysql -u用户名 -p密码")]),t._v(" "),a("li",[t._v("mysql -u用户名 -p")])]),t._v(" "),a("p",[t._v("连接远程的mysql：mysql -h主机地址 -P 端口号 -u用户名  -p密码")]),t._v(" "),a("p",[t._v("当前DBMS中，有哪些DB: show databases;")]),t._v(" "),a("p",[t._v("打开数据库：")]),t._v(" "),a("p",[t._v("添加一条数据：insert into 表名 values(字段的值);")]),t._v(" "),a("p",[t._v("查看表中的数据：select * from 表名;")]),t._v(" "),a("p",[t._v("数据库里没有char类型，只有字符串，quotes and double quotes都可以用。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rose"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mary'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("查看当前mysql的编码方式：show variables like 'character%';")]),t._v(" "),a("h2",{attrs:{id:"_6-导入与导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-导入与导出"}},[t._v("#")]),t._v(" 6. 导入与导出")]),t._v(" "),a("h3",{attrs:{id:"导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出"}},[t._v("#")]),t._v(" 导出")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 先退出才能导出")]),t._v("\nmysqldump "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p 数据库名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 文件路径:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("文件名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 输入mysql的密码就会自动导出")]),t._v("\n")])])]),a("h3",{attrs:{id:"导入外部的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导入外部的数据"}},[t._v("#")]),t._v(" 导入外部的数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 需要登陆")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 先选择一个想要导入的数据库，然后再导入")]),t._v("\nsource 存储数据的路径"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_7-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-运算符"}},[t._v("#")]),t._v(" 7. 运算符")]),t._v(" "),a("h3",{attrs:{id:"_7-1-算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-算术运算符"}},[t._v("#")]),t._v(" 7.1 算术运算符")]),t._v(" "),a("p",[t._v("+：加\n-：减\n*：乘\n/：除 可以保留小数部分\ndiv：除  如果整数与整数相除只保留整数部分\n%：求余数\nmod：求余数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#0.5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#0")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-2-比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-比较运算符"}},[t._v("#")]),t._v(" 7.2 比较运算符")]),t._v(" "),a("p",[t._v("：大于\n<：小于\n=：等于  注意区别，Java中是==,mysql中是=\n=：大于等于\n<=：小于等于\n!=：不等于\n<>：不等于\n<=>：安全等于  用于判断null值的比较运算符\nnull值的判断，习惯上我们用is null 和is not null")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询薪资大于20000元的员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询所有男员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询奖金比例commision_pct是null的员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" commission_pct "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" commission_pct "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-3-逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-逻辑运算符"}},[t._v("#")]),t._v(" 7.3 逻辑运算符")]),t._v(" "),a("p",[t._v("建议用单词，可读性来说")]),t._v(" "),a("p",[t._v("逻辑与：&& 或 and\n逻辑或：|| 或 or\n逻辑非：! 或 not\n逻辑异或： xor ^ 相同为false（1），不同为true（0）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 注意逻辑运算符的位置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询薪资大于20000元的女员工\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询男员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询薪资大于10000  异或 性别是男的，即它俩只能满足一个")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#即查询薪资大于10000的女的或薪资低于10000的男的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("xor")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_8-范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-范围"}},[t._v("#")]),t._v(" 8. 范围")]),t._v(" "),a("h3",{attrs:{id:"_8-1-区间范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-区间范围"}},[t._v("#")]),t._v(" 8.1 区间范围")]),t._v(" "),a("p",[t._v("​\t在[a,b]之间，between a and b\n​\t不在[a,b]之间，not between a and b")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询薪资在[15000,20000]之间的员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询薪资不在[15000,20000]之间的员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  not的位置两个都可。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-2-集合范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-集合范围"}},[t._v("#")]),t._v(" 8.2 集合范围")]),t._v(" "),a("p",[t._v("​\tin(...)\n​\tnot in(...)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询薪资在9000,10000,12000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-3-模糊查询和正则匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-模糊查询和正则匹配"}},[t._v("#")]),t._v(" 8.3 模糊查询和正则匹配")]),t._v(" "),a("p",[t._v("只针对字符串类型，日期类型")]),t._v(" "),a("p",[t._v("%代表任意多个字符")]),t._v(" "),a("p",[t._v("x代表确定的字符")]),t._v(" "),a("p",[t._v("_表示确定的1个字符")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询，名字ename中包含“冰”这个字的员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%冰%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询，名字ename是张xx，三个字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张__'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询，名字ename是第二个字是'冰'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_冰%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-4-位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-位运算符"}},[t._v("#")]),t._v(" 8.4 位运算符")]),t._v(" "),a("p",[t._v("（很少使用）")]),t._v(" "),a("p",[t._v("左移：<<\n右移：>>\n按位与：&\n按位或：|\n按位异或：^\n按位取反：~")]),t._v(" "),a("h3",{attrs:{id:"_8-5-特殊的null值处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-特殊的null值处理"}},[t._v("#")]),t._v(" 8.5 特殊的null值处理")]),t._v(" "),a("p",[t._v("xx is null\nxx is not null\nxx <=> null")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 筛选出是null值的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 筛选出不是null值的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 判断不为null的时候，需要把not放在要判断的字段名前面。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_9-约束与索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-约束与索引"}},[t._v("#")]),t._v(" 9. 约束与索引")]),t._v(" "),a("h3",{attrs:{id:"_9-1-约束与索引的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-约束与索引的概念"}},[t._v("#")]),t._v(" 9.1 约束与索引的概念")]),t._v(" "),a("p",[t._v("约束是用来对数据业务规则和数据完整性进行实施、维护。约束的作用范围仅限在当前数据库，约束可以被当做"),a("strong",[t._v("数据库对象")]),t._v("来处理，它们具有名称和关联模式，是逻辑约束，不会因为设置约束而额外占用空间。")]),t._v(" "),a("p",[t._v("1、数据完整性（Data Integrity）是指数据的精确性（Accuracy）和可靠性（Reliability）。它是应防止数据库中存在不符合语义规定的数据和防止因错误信息的输入输出造成无效操作或错误信息而提出的。")]),t._v(" "),a("p",[t._v("数据的完整性要从以下四个方面考虑：")]),t._v(" "),a("ul",[a("li",[t._v("实体完整性（Entity Integrity）：例如，同一个表中，不能存在两条完全相同无法区分的记录")]),t._v(" "),a("li",[t._v("域完整性（Domain Integrity）：例如：年龄范围0-120，性别范围“男/女”")]),t._v(" "),a("li",[t._v("引用完整性（Referential Integrity）：例如：员工所在部门，在部门表中要能找到这个部门")]),t._v(" "),a("li",[t._v("用户自定义完整性（User-defined Integrity）：例如：用户名唯一、密码不能为空等，本部门经理的工资不得高于本部门职工的平均工资的5倍。")])]),t._v(" "),a("p",[t._v("2、根据约束的特点，分为几种：")]),t._v(" "),a("ul",[a("li",[t._v("键约束：主键约束（用来解决实体完整性）、外键约束（用来解决引用完整性）、唯一键约束（用来解决用户自定义完整性）。")]),t._v(" "),a("li",[t._v("Not NULL约束：非空约束。")]),t._v(" "),a("li",[t._v("Check约束：检查约束(5.7版本不支持)")]),t._v(" "),a("li",[t._v("Default约束：默认值约束")]),t._v(" "),a("li",[t._v("自增约束：（自动增长约束，一般都是用在主键约束上）。")])]),t._v(" "),a("p",[t._v("3、约束（CONSTRAINTS）与索引（INDEX）")]),t._v(" "),a("p",[a("strong",[t._v("索引")]),t._v("是一个单独、物理的存储在数据页上的数据库结构，它是表中"),a("strong",[t._v("一列或若干列值的集合")]),t._v("和相应的指向表中数据值的物理标识数据页的"),a("strong",[t._v("逻辑指针清单")]),t._v("（类似于新华字典的目录索引页）。索引的存在会增加数据库的存储空间，也会使插入、修改数据的时间开销变多(因为插入和修改数据时，索引也要随之变动），但是可以大大提高查询速度。因此应该在键列、或其他经常要查询、排序、按范围查找的列上建立索引，而对于在查询中很少使用和参考的列、修改非常频繁的列，值很少的列（例如性别只有男和女）等列上不应该创建索引。")]),t._v(" "),a("blockquote",[a("p",[t._v("Mysql会在主键、唯一键、外键列上自动创建索引，其他列需要建立索引的话，需要手动创建。")]),t._v(" "),a("p",[t._v("其中主键删除，对应的索引也会删除")]),t._v(" "),a("p",[t._v("删除唯一键的方式是通过删除对应的索引来实现的")]),t._v(" "),a("p",[t._v("删除外键，外键列上的索引还在，如果需要删除，需要单独删除索引")])]),t._v(" "),a("h3",{attrs:{id:"_9-2-ddl-v2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-ddl-v2-0"}},[t._v("#")]),t._v(" 9.2 DDL(v2.0)")]),t._v(" "),a("h4",{attrs:{id:"查看某个表的约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看某个表的约束"}},[t._v("#")]),t._v(" 查看某个表的约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 没有where条件的话，会查找所有表的约束")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" information_schema"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table_constraints "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" table_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'表名称'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 或")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"查看某个表的索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看某个表的索引"}},[t._v("#")]),t._v(" 查看某个表的索引")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"主键约束-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键约束-primary-key"}},[t._v("#")]),t._v(" 主键约束 primary key")]),t._v(" "),a("p",[t._v("主键分为单列主键和复合主键：")]),t._v(" "),a("p",[t._v("特点")]),t._v(" "),a("ol",[a("li",[t._v("唯一、非空、不能重复")]),t._v(" "),a("li",[t._v("创建主键会自动创建对应的索引，删除主键时会自动删除对应的索引，但是非空约束没有被删除。")])]),t._v(" "),a("h5",{attrs:{id:"建表时-指定主键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表时-指定主键约束"}},[t._v("#")]),t._v(" 建表时 指定主键约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 直接写在字段后面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 写完字段，再设定主键")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"建表后-指定主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表后-指定主键"}},[t._v("#")]),t._v(" 建表后 指定主键")]),t._v(" "),a("p",[t._v("如果想要设置为主键的字段已经有null值，则无法设置成功，需要处理完null值后才能设置。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主键字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"删除主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除主键"}},[t._v("#")]),t._v(" 删除主键")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"非空约束-not-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非空约束-not-null"}},[t._v("#")]),t._v(" 非空约束 not null")]),t._v(" "),a("p",[t._v("规定某个字段不能为空")]),t._v(" "),a("h5",{attrs:{id:"建表时-指定非空"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表时-指定非空"}},[t._v("#")]),t._v(" 建表时 指定非空")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 只有这一种方式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"建表后-指定非空"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表后-指定非空"}},[t._v("#")]),t._v(" 建表后 指定非空")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" 字段名 数据类型 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果该字段原来设置了默认值约束，要跟着一起再写一遍，否则默认值约束会丢失")]),t._v("\n")])])]),a("h5",{attrs:{id:"取消非空约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取消非空约束"}},[t._v("#")]),t._v(" 取消非空约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" 字段名 数据类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果该字段原来设置了默认值约束，要跟着一起再写一遍，否则默认值约束会丢失")]),t._v("\n")])])]),a("h4",{attrs:{id:"唯一约束-unique-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#唯一约束-unique-key"}},[t._v("#")]),t._v(" 唯一约束 unique key")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ol",[a("li",[t._v("保证此值在整张表中是唯一的。")]),t._v(" "),a("li",[t._v("创建完唯一约束，会在表内创建一个索引。")]),t._v(" "),a("li",[t._v("删除索引，就相当于删除了唯一约束。")]),t._v(" "),a("li",[t._v("唯一键约束列允许为null。")]),t._v(" "),a("li",[t._v("同一个表可以有多个唯一约束。")]),t._v(" "),a("li",[t._v("唯一约束可以是某一个列的值唯一，也可以多个列组合值的唯一。")])]),t._v(" "),a("h5",{attrs:{id:"建表时-指定唯一约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表时-指定唯一约束"}},[t._v("#")]),t._v(" 建表时 指定唯一约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 直接写在字段后面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nemail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 写完字段后再指定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nemail "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 下面这行不是sname和email分别是唯一约束，而是sname+email是唯一约束")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"建表后增加唯一约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表后增加唯一约束"}},[t._v("#")]),t._v(" 建表后增加唯一约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" 约束名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字段名列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果没有指定约束名，(字段名列表)中只有一个字段的，默认是该字段名，如果是多个字段的默认是字段名列表的第1个字段名。也可以通过show index from 表名;来查看")]),t._v("\n")])])]),a("h5",{attrs:{id:"删除唯一键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除唯一键约束"}},[t._v("#")]),t._v(" 删除唯一键约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" 唯一约束字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"默认值约束-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认值约束-default"}},[t._v("#")]),t._v(" 默认值约束 default")]),t._v(" "),a("ol",[a("li",[t._v("如果没有给某个字段赋值，则会采用默认值。")]),t._v(" "),a("li",[t._v("默认值约束修饰的字段可以接受null值。")]),t._v(" "),a("li")]),t._v(" "),a("h5",{attrs:{id:"建表时-指定默认约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表时-指定默认约束"}},[t._v("#")]),t._v(" 建表时 指定默认约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nbuybook "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TRUE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FALSE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TRUE'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("】 【"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("】 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 默认值】"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 外键约束等级】【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 外键约束等级【\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#外键只能在所有字段列表后面单独指定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 【数据名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("】表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型 【"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("】 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 默认值】"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型 【"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("】 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" 默认值】"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("复合主键字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是复合主键，那么就需要在所有字段列表后面使用这种形式指定，不能在字段后面直接加primary key")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("复合唯一字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是复合唯一键，那么就需要在所有字段列表后面使用这种形式指定，不能在字段后面直接加unique key")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 外键约束等级】【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 外键约束等级【\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#外键只能在所有字段列表后面单独指定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"建表后-指定默认值约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表后-指定默认值约束"}},[t._v("#")]),t._v(" 建表后 指定默认值约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" 字段名 数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" 默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" buybook "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TRUE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FALSE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TRUE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"取消默认值约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取消默认值约束"}},[t._v("#")]),t._v(" 取消默认值约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" 字段名 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 举例：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MODIFY")]),t._v(" buybook "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TRUE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FALSE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"检查约束-check"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查约束-check"}},[t._v("#")]),t._v(" 检查约束：check")]),t._v(" "),a("p",[t._v("检查约束，mysql5.7不支持")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tgender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("check")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" stu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" stu "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李四'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'妖'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n使用枚举类型解决如上问题：\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tsid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tgender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"自增约束-auto-increment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增约束-auto-increment"}},[t._v("#")]),t._v(" 自增约束 auto_increment")]),t._v(" "),a("ul",[a("li",[t._v("一个表最多只能有一个自增长列")]),t._v(" "),a("li",[t._v("自增长列必须是键列（主键列，唯一键列，外键列），并且要求非空。")]),t._v(" "),a("li",[t._v("自增列必须是整数类型")]),t._v(" "),a("li",[t._v("InnoDB表的自动增长列可以手动插入，但是插入的值如果是空或者0，则实际插入的将是自动增长后的值。")])]),t._v(" "),a("h5",{attrs:{id:"建表时-指定自增约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表时-指定自增约束"}},[t._v("#")]),t._v(" 建表时 指定自增约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 或")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nage "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNIQUE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"建表后-指定自增约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表后-指定自增约束"}},[t._v("#")]),t._v(" 建表后 指定自增约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" 自增字段名 数据类型 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"删除自增约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除自增约束"}},[t._v("#")]),t._v(" 删除自增约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v(" 自增字段名 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"外键约束-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外键约束-foreign-key"}},[t._v("#")]),t._v(" 外键约束 foreign key")]),t._v(" "),a("p",[t._v("外键约束是用来实现数据库表的参照完整性的。外键约束可以使两张表紧密的结合起来，特别是针对修改或者删除的级联操作时，会保证数据的完整性。")]),t._v(" "),a("p",[t._v("外键是指表中某个字段的值依赖于另一张表中某个字段的值，而"),a("strong",[t._v("被依赖的字段必须具有主键约束或者唯一约束")]),t._v("。被依赖的表我们通常称之为父表或者主表，设置外键约束的表称为子表或者从表。")]),t._v(" "),a("h5",{attrs:{id:"外键特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外键特点"}},[t._v("#")]),t._v(" 外键特点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("外键约束是保证一个或两个表之间的参照完整性,外键是构建于一个表的两个字段或是两个表的两个字段之间的参照关系。")])]),t._v(" "),a("li",[a("p",[t._v("在创建外键约束时，如果不给外键约束名称，默认名不是列名，而是自动产生一个外键名（例如 student_ibfk_1;），也可以指定外键约束名。")])]),t._v(" "),a("li",[a("p",[t._v("当创建外键约束时，系统默认会在所在的列上建立对应的普通索引。但是索引名是列名，不是外键的约束名。")])]),t._v(" "),a("li",[a("p",[t._v("删除外键时，关于外键列上的普通索引需要单独删除。")])])]),t._v(" "),a("h5",{attrs:{id:"要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#要求"}},[t._v("#")]),t._v(" 要求")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在从表上建立外键，而且主表要先存在。")])]),t._v(" "),a("li",[a("p",[t._v("一个表可以建立多个外键约束")])]),t._v(" "),a("li",[a("p",[t._v("从表的外键列，在主表中引用的只能是键列（主键，唯一键，外键），推荐引用主表的主键。")])]),t._v(" "),a("li",[a("p",[t._v("从表的外键列与主表被参照的列名字可以不相同，但是数据类型必须一样")])])]),t._v(" "),a("h5",{attrs:{id:"约束关系-约束是针对双方的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约束关系-约束是针对双方的"}},[t._v("#")]),t._v(" 约束关系：约束是针对双方的")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("添加了外键约束后，主表的修改和删除数据受约束")])]),t._v(" "),a("li",[a("p",[t._v("添加了外键约束后，从表的添加和修改数据受约束")])]),t._v(" "),a("li",[a("p",[t._v("在从表上建立外键，要求主表必须存在")])]),t._v(" "),a("li",[a("p",[t._v("删除主表时，要求从表先删除，或将从表中外键引用该主表的关系先删除")])])]),t._v(" "),a("h5",{attrs:{id:"_5个约束等级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5个约束等级"}},[t._v("#")]),t._v(" 5个约束等级")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Cascade方式（级联）：在父表上update/delete记录时，同步update/delete掉子表的匹配记录。")])]),t._v(" "),a("li",[a("p",[t._v("Set null方式：在父表上update/delete记录时，将子表上匹配记录的列设为null，但是要注意子表的外键列不能为not null 。")])]),t._v(" "),a("li",[a("p",[t._v("No action方式：如果子表中有匹配的记录，则不允许对父表对应候选键进行update/delete操作。")])]),t._v(" "),a("li",[a("p",[t._v("Restrict方式：同no action，都是立即检查外键约束。（默认为此等级）")])]),t._v(" "),a("li",[a("p",[t._v("Set default方式（在可视化工具SQLyog中可能显示空白）：父表有变更时,子表将外键列设置成一个默认的值，但Innodb不能识别。")])])]),t._v(" "),a("p",[t._v("默认：如果没有指定等级，就相当于Restrict方式。")]),t._v(" "),a("h5",{attrs:{id:"建表时-指定外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表时-指定外键约束"}},[t._v("#")]),t._v(" 建表时 指定外键约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" classroom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    cid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    cname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nsid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nroom "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("room"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" classroom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 从表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" 外键约束名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 外键约束等级"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 外键约束等级"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#外键只能在所有字段列表后面单独指定")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果要自己命名外键约束名，建议命名规则为【主表名_从表名_关联字段名_fk】")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- fk为foreign key的缩写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("复合主键字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是复合主键，那么就需要在所有字段列表后面使用这种形式指定，不能在字段后面直接加primary key")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("复合唯一字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是复合唯一键，那么就需要在所有字段列表后面使用这种形式指定，不能在字段后面直接加unique key")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表字段"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 外键约束等级"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 外键约束等级"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#外键只能在所有字段列表后面单独指定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"建表后-指定外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表后-指定外键约束"}},[t._v("#")]),t._v(" 建表后 指定外键约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" 从表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" 外键约束名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从表字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" 主表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表被参照字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" xx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"删除外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除外键约束"}},[t._v("#")]),t._v(" 删除外键约束")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 注意删除后，用 【DESC 表名】还是能看到外建约束的存在，但实际上已经")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" 外键约束名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看约束名 SELECT * FROM information_schema.table_constraints WHERE table_name = '表名称';")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除外键约束不会删除对应的索引，如果需要删除索引，需要用ALTER TABLE 表名称 DROP INDEX 索引名;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看索引名 show index from 表名称;")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-3-dml-v2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-dml-v2-0"}},[t._v("#")]),t._v(" 9.3 DML(v2.0)")]),t._v(" "),a("p",[t._v("1、如果某列有自增约束，怎么添加该字段的值")]),t._v(" "),a("p",[t._v("添加数据时，对于自增列")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 【数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在值列表中，对应自增列可以赋值为null和0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 【数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("表名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("部分字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#自增列在(部分字段列表)中不写就可以")]),t._v("\n")])])]),a("p",[t._v("2、如果某列有默认值约束，怎么添加、修改该字段的值")]),t._v(" "),a("p",[t._v("添加数据时，对于有默认值列")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 【数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在值列表中，对应默认值列，如果想用默认值，用default")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 【数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("表名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("部分字段列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("值列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对应默认值列，如果想用默认值，在(部分字段列表)中不写就可以")]),t._v("\n")])])]),a("p",[t._v("修改数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" 【数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("表名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 。。。 【"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 条件】"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对应默认值列，如果想用默认值，写字段名 = default就可以")]),t._v("\n")])])]),a("h2",{attrs:{id:"_10-函数-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-函数-function"}},[t._v("#")]),t._v(" 10. 函数 function")]),t._v(" "),a("p",[t._v("单行函数 和 多行函数")]),t._v(" "),a("h3",{attrs:{id:"_10-1-单行函数-single-line-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-单行函数-single-line-function"}},[t._v("#")]),t._v(" 10.1 单行函数 Single line function")]),t._v(" "),a("blockquote",[a("p",[t._v("https://www.fatalerrors.org/a/detailed-explanation-of-mysql-single-line-function.html")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("只对一行进行变换，每行返回一个结果")])]),t._v(" "),a("li",[t._v("可以嵌套")]),t._v(" "),a("li",[t._v("参数可以是一字段或一个表达式或一个值")])]),t._v(" "),a("h4",{attrs:{id:"字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[t._v("#")]),t._v(" 字符串函数")]),t._v(" "),a("h5",{attrs:{id:"concat-s1-s2-sn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concat-s1-s2-sn"}},[t._v("#")]),t._v(" CONCAT(S1,S2,......,Sn)")]),t._v(" "),a("p",[t._v("连接S1,S2,......,Sn为一个字符串")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" concat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- helloworld")]),t._v("\n")])])]),a("h5",{attrs:{id:"concat-ws-s-s1-s2-sn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concat-ws-s-s1-s2-sn"}},[t._v("#")]),t._v(" CONCAT_WS(s, S1,S2,......,Sn)")]),t._v(" "),a("p",[t._v("同CONCAT(s1,s2,...)函数，但是每个字符串之间要加上s")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" concat_ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'666'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- hello666world")]),t._v("\n")])])]),a("h5",{attrs:{id:"char-length-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char-length-s"}},[t._v("#")]),t._v(" CHAR_LENGTH(s)")]),t._v(" "),a("p",[t._v("返回字符串s的字符数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" char_length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 孙红雷,3")]),t._v("\n")])])]),a("h5",{attrs:{id:"length-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#length-s"}},[t._v("#")]),t._v(" LENGTH(s)")]),t._v(" "),a("p",[t._v("返回字符串s的字节数，和字符集有关.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 孙红雷,9")]),t._v("\n")])])]),a("h5",{attrs:{id:"upper-s-或-ucase-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upper-s-或-ucase-s"}},[t._v("#")]),t._v(" UPPER(s) 或 UCASE(s)")]),t._v(" "),a("p",[t._v("将字符串s的所有字母转成大写字母")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" upper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- shl@atguigu.com,SHL@ATGUIGU.COM")]),t._v("\n")])])]),a("h5",{attrs:{id:"left-s-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#left-s-n"}},[t._v("#")]),t._v(" LEFT(s,n)")]),t._v(" "),a("p",[t._v("返回字符串s最左边的n个字符")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 孙红雷,孙红")]),t._v("\n")])])]),a("h5",{attrs:{id:"trim-both-s1-from-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trim-both-s1-from-s"}},[t._v("#")]),t._v(" TRIM( BOTH s1 FROM s)")]),t._v(" "),a("p",[t._v("去掉字符串s 开始 与 结尾的s1")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" trim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOTH "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%%%%hello%%%%world%%%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- hello%%%%world")]),t._v("\n")])])]),a("h5",{attrs:{id:"trim-leading-s1-from-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trim-leading-s1-from-s"}},[t._v("#")]),t._v(" TRIM( LEADING s1 FROM s)")]),t._v(" "),a("p",[t._v("去掉字符串s开始处的s1")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" trim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LEADING "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%%%%hello%%%%world%%%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- hello%%%%world%%%")]),t._v("\n")])])]),a("h5",{attrs:{id:"trim-trailing-s1-from-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trim-trailing-s1-from-s"}},[t._v("#")]),t._v(" TRIM( TRAILING s1 FROM s)")]),t._v(" "),a("p",[t._v("去掉字符串s结尾处的s1")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" trim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TRAILING "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%%%%hello%%%%world%%%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- %%%%hello%%%%world")]),t._v("\n")])])]),a("h5",{attrs:{id:"substring-s-index-len"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substring-s-index-len"}},[t._v("#")]),t._v(" SUBSTRING(s,index,len)")]),t._v(" "),a("p",[t._v("返回从字符串s的index位置其len个字符")]),t._v(" "),a("p",[t._v("注意：mysql的index，即下标，是从1开始的。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" substring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- shl@atguigu.com, hl@")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("函数")]),t._v(" "),a("th",[t._v("用法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("INSERT(str, index , len, instr)")]),t._v(" "),a("td",[t._v("将字符串str从第index位置开始，len个字符长的子串替换为字符串instr")])]),t._v(" "),a("tr",[a("td",[t._v("LOWER(s)  或LCASE(s)")]),t._v(" "),a("td",[t._v("将字符串s的所有字母转成小写字母")])]),t._v(" "),a("tr",[a("td",[t._v("RIGHT(s,n)")]),t._v(" "),a("td",[t._v("返回字符串s最右边的n个字符")])]),t._v(" "),a("tr",[a("td",[t._v("LPAD(str, len, pad)")]),t._v(" "),a("td",[t._v("用字符串pad对str最左边进行填充，直到str的长度为len个字符")])]),t._v(" "),a("tr",[a("td",[t._v("RPAD(str ,len, pad)")]),t._v(" "),a("td",[t._v("用字符串pad对str最右边进行填充，直到str的长度为len个字符")])]),t._v(" "),a("tr",[a("td",[t._v("LTRIM(s)")]),t._v(" "),a("td",[t._v("去掉字符串s左侧的空格")])]),t._v(" "),a("tr",[a("td",[t._v("RTRIM(s)")]),t._v(" "),a("td",[t._v("去掉字符串s右侧的空格")])]),t._v(" "),a("tr",[a("td",[t._v("TRIM(s)")]),t._v(" "),a("td",[t._v("去掉字符串s开始与结尾的空格")])]),t._v(" "),a("tr",[a("td",[t._v("REPEAT(str, n)")]),t._v(" "),a("td",[t._v("返回str重复n次的结果")])]),t._v(" "),a("tr",[a("td",[t._v("REPLACE（str, a, b）")]),t._v(" "),a("td",[t._v("用字符串b替换字符串str中所有出现的字符串a")])]),t._v(" "),a("tr",[a("td",[t._v("STRCMP(s1,s2)")]),t._v(" "),a("td",[t._v("比较字符串s1,s2")])])])]),t._v(" "),a("h4",{attrs:{id:"数值函数-数学函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值函数-数学函数"}},[t._v("#")]),t._v(" 数值函数/数学函数")]),t._v(" "),a("h5",{attrs:{id:"abs-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abs-x"}},[t._v("#")]),t._v(" ABS(x)")]),t._v(" "),a("p",[t._v("返回x的绝对值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("abs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--         1       1 ")]),t._v("\n")])])]),a("h5",{attrs:{id:"ceil-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ceil-x"}},[t._v("#")]),t._v(" CEIL(x)")]),t._v(" "),a("p",[t._v("向上取整，返回大于x的最小整数值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ceil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  3")]),t._v("\n")])])]),a("h5",{attrs:{id:"floor-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floor-x"}},[t._v("#")]),t._v(" FLOOR(x)")]),t._v(" "),a("p",[t._v("向下取整，返回小于x的最大整数值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" floor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t  \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2")]),t._v("\n")])])]),a("h5",{attrs:{id:"round-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#round-x-y"}},[t._v("#")]),t._v(" ROUND(x,y)")]),t._v(" "),a("p",[t._v("返回参数x的四舍五入的有y位的小数的值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 6")]),t._v("\n\t\t\t\t\t\t\t\t\t  \t\t\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 5.46")]),t._v("\n")])])]),a("h5",{attrs:{id:"truncate-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#truncate-x-y"}},[t._v("#")]),t._v(" TRUNCATE(x,y)")]),t._v(" "),a("p",[t._v("返回数字x截断为y位小数的结果，不会四舍五入")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 5.45")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("函数")]),t._v(" "),a("th",[t._v("用法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("MOD(x,y)")]),t._v(" "),a("td",[t._v("返回x/y的模")])]),t._v(" "),a("tr",[a("td",[t._v("RAND()")]),t._v(" "),a("td",[t._v("返回0~1的随机值")])]),t._v(" "),a("tr",[a("td",[t._v("SQRT(x)")]),t._v(" "),a("td",[t._v("返回x的平方根")])]),t._v(" "),a("tr",[a("td",[t._v("POW(x,y)")]),t._v(" "),a("td",[t._v("返回x的y次方")])])])]),t._v(" "),a("h4",{attrs:{id:"日期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期函数"}},[t._v("#")]),t._v(" 日期函数")]),t._v(" "),a("h5",{attrs:{id:"now-sysdate-current-timestamp-localtime-localtimestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#now-sysdate-current-timestamp-localtime-localtimestamp"}},[t._v("#")]),t._v(" NOW() / SYSDATE() / CURRENT_TIMESTAMP() / LOCALTIME() / LOCALTIMESTAMP()")]),t._v(" "),a("p",[t._v("返回当前系统日期时间")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sysdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("localtimestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sysdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("localtimestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n2021-11-22 12:00:51,\n2021-11-22 12:00:51,\n2021-11-22 12:00:51,\n2021-11-22 12:00:51,\n0,\n2021-11-22 12:00:51,\tnow() \n2021-11-22 12:00:56,\tsysdate() 返回的是函数被执行时的时间\n2021-11-22 12:00:51,\tlocaltime()\n2021-11-22 12:00:51\t\tlocaltimestamp()  \n*/")]),t._v("\n")])])]),a("h5",{attrs:{id:"year-date-month-date-day-date-hour-time-minute-time-second-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#year-date-month-date-day-date-hour-time-minute-time-second-time"}},[t._v("#")]),t._v(" YEAR(date) / MONTH(date) / DAY(date) / HOUR(time) / MINUTE(time) / SECOND(time)")]),t._v(" "),a("p",[t._v("返回具体的时间值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("minute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("second")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2021,11,22,11,58,3")]),t._v("\n")])])]),a("h5",{attrs:{id:"dayname-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dayname-date"}},[t._v("#")]),t._v(" DAYNAME(date)")]),t._v(" "),a("p",[t._v("返回星期几：MONDAY,TUESDAY.....SUNDAY")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" dayname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Monday")]),t._v("\n")])])]),a("h5",{attrs:{id:"date-add-datetime-interval-expr-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-add-datetime-interval-expr-type"}},[t._v("#")]),t._v(" DATE_ADD(datetime, INTERVAL  expr type)")]),t._v(" "),a("p",[t._v("返回与给定日期时间相差INTERVAL时间段的日期时间")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2024-11-22 12:06:05")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2018-11-22 12:06:30")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MONTH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2021-08-22 12:06:55")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DAY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2021-11-19 12:07:14")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("函数")]),t._v(" "),a("th",[t._v("用法")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("CURDATE()")]),t._v(" 或 CURRENT_DATE()")]),t._v(" "),a("td",[t._v("返回当前日期")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("CURTIME()")]),t._v(" 或 CURRENT_TIME()")]),t._v(" "),a("td",[t._v("返回当前时间")])]),t._v(" "),a("tr",[a("td",[t._v("WEEK(date) / WEEKOFYEAR(date)")]),t._v(" "),a("td",[t._v("返回一年中的第几周")])]),t._v(" "),a("tr",[a("td",[t._v("DAYOFWEEK()")]),t._v(" "),a("td",[t._v("返回周几，注意：周日是1，周一是2，。。。周六是7")])]),t._v(" "),a("tr",[a("td",[t._v("WEEKDAY(date)")]),t._v(" "),a("td",[t._v("返回周几，注意，周1是0，周2是1，。。。周日是6")])]),t._v(" "),a("tr",[a("td",[t._v("MONTHNAME(date)")]),t._v(" "),a("td",[t._v("返回月份：January，。。。。。")])]),t._v(" "),a("tr",[a("td",[t._v("DATEDIFF(date1,date2) / TIMEDIFF(time1, time2)")]),t._v(" "),a("td",[t._v("返回date1 - date2的日期间隔 / 返回time1 - time2的时间间隔")])]),t._v(" "),a("tr",[a("td",[t._v("DATE_FORMAT(datetime ,fmt)")]),t._v(" "),a("td",[t._v("按照字符串fmt格式化日期datetime值")])]),t._v(" "),a("tr",[a("td",[t._v("STR_TO_DATE(str, fmt)")]),t._v(" "),a("td",[t._v("按照字符串fmt对str进行解析，解析为一个日期")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 找出员工中入职时间超过5年的老员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" hiredate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中：")]),t._v(" "),a("p",[a("strong",[t._v("（1）DATE_ADD(datetime,INTERVAL  expr type)")])]),t._v(" "),a("p",[t._v("表达式类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数类型")]),t._v(" "),a("th",[t._v("参数类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("YEAR")]),t._v(" "),a("td",[t._v("YEAR_MONTH")])]),t._v(" "),a("tr",[a("td",[t._v("MONTH")]),t._v(" "),a("td",[t._v("DAY_HOUR")])]),t._v(" "),a("tr",[a("td",[t._v("DAY")]),t._v(" "),a("td",[t._v("DAY_MINUTE")])]),t._v(" "),a("tr",[a("td",[t._v("HOUR")]),t._v(" "),a("td",[t._v("DAY_SECOND")])]),t._v(" "),a("tr",[a("td",[t._v("MINUTE")]),t._v(" "),a("td",[t._v("HOUR_MINUTE")])]),t._v(" "),a("tr",[a("td",[t._v("SECOND")]),t._v(" "),a("td",[t._v("HOUR_SECOND")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("MINUTE_SECOND")])])])]),t._v(" "),a("p",[t._v("举例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可以是负数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DATE_ADD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1_1'")]),t._v(" YEAR_MONTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要单引号")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("（2）DATE_FORMAT(datetime,fmt) 和 STR_TO_DATE(str, fmt)")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("格式符")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("格式符")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("%Y")]),t._v(" "),a("td",[t._v("4位数字表示年份")]),t._v(" "),a("td",[t._v("%y")]),t._v(" "),a("td",[t._v("表示两位数字表示年份")])]),t._v(" "),a("tr",[a("td",[t._v("%M")]),t._v(" "),a("td",[t._v("月名表示月份（January,....）")]),t._v(" "),a("td",[t._v("%m")]),t._v(" "),a("td",[t._v("两位数字表示月份（01,02,03。。。）")])]),t._v(" "),a("tr",[a("td",[t._v("%b")]),t._v(" "),a("td",[t._v("缩写的月名（Jan.，Feb.，....）")]),t._v(" "),a("td",[t._v("%c")]),t._v(" "),a("td",[t._v("数字表示月份（1,2,3,...）")])]),t._v(" "),a("tr",[a("td",[t._v("%D")]),t._v(" "),a("td",[t._v("英文后缀表示月中的天数（1st,2nd,3rd,...）")]),t._v(" "),a("td",[t._v("%d")]),t._v(" "),a("td",[t._v("两位数字表示月中的天数(01,02...)")])]),t._v(" "),a("tr",[a("td",[t._v("%e")]),t._v(" "),a("td",[t._v("数字形式表示月中的天数（1,2,3,4,5.....）")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("%H")]),t._v(" "),a("td",[t._v("两位数字表示小数，24小时制（01,02..）")]),t._v(" "),a("td",[t._v("%h和%I")]),t._v(" "),a("td",[t._v("两位数字表示小时，12小时制（01,02..）")])]),t._v(" "),a("tr",[a("td",[t._v("%k")]),t._v(" "),a("td",[t._v("数字形式的小时，24小时制(1,2,3)")]),t._v(" "),a("td",[t._v("%l")]),t._v(" "),a("td",[t._v("数字形式表示小时，12小时制（1,2,3,4....）")])]),t._v(" "),a("tr",[a("td",[t._v("%i")]),t._v(" "),a("td",[t._v("两位数字表示分钟（00,01,02）")]),t._v(" "),a("td",[t._v("%S和%s")]),t._v(" "),a("td",[t._v("两位数字表示秒(00,01,02...)")])]),t._v(" "),a("tr",[a("td",[t._v("%W")]),t._v(" "),a("td",[t._v("一周中的星期名称（Sunday...）")]),t._v(" "),a("td",[t._v("%a")]),t._v(" "),a("td",[t._v("一周中的星期缩写（Sun.，Mon.,Tues.，..）")])]),t._v(" "),a("tr",[a("td",[t._v("%w")]),t._v(" "),a("td",[t._v("以数字表示周中的天数(0=Sunday,1=Monday....)")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("%j")]),t._v(" "),a("td",[t._v("以3位数字表示年中的天数(001,002...)")]),t._v(" "),a("td",[t._v("%U")]),t._v(" "),a("td",[t._v("以数字表示年中的第几周，（1,2,3。。）其中Sunday为周中第一天")])]),t._v(" "),a("tr",[a("td",[t._v("%u")]),t._v(" "),a("td",[t._v("以数字表示年中的第几周，（1,2,3。。）其中Monday为周中第一天")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("%T")]),t._v(" "),a("td",[t._v("24小时制")]),t._v(" "),a("td",[t._v("%r")]),t._v(" "),a("td",[t._v("12小时制")])]),t._v(" "),a("tr",[a("td",[t._v("%p")]),t._v(" "),a("td",[t._v("AM或PM")]),t._v(" "),a("td",[t._v("%%")]),t._v(" "),a("td",[t._v("表示%")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y %m %D %H %i %s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("th "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("56")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" str_to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020-9-9'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%Y-%m-%D"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),t._v("\n")])])]),a("h4",{attrs:{id:"流程函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程函数"}},[t._v("#")]),t._v(" 流程函数")]),t._v(" "),a("h5",{attrs:{id:"if-value-t-f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-value-t-f"}},[t._v("#")]),t._v(" IF(value,t ,f)")]),t._v(" "),a("p",[t._v("如果value是真，返回t，否则返回f")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 类似Java中的三目运算符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 对于工资大于等于15000，输出高工资；小于15000的，输出一般工资")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'高工资'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'一般工资'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"ifnull-value1-value2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ifnull-value1-value2"}},[t._v("#")]),t._v(" IFNULL(value1, value2)")]),t._v(" "),a("p",[t._v("如果value1不为空，返回value1，否则返回value2")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 求年薪 年薪=月薪资*12*(1+年终奖比例)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 但是年终奖比例用为空的情况。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'高工资'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'一般工资'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 年薪\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"case-when-条件1-then-result1-when-条件2-then-result2-else-resultn-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-when-条件1-then-result1-when-条件2-then-result2-else-resultn-end"}},[t._v("#")]),t._v(" CASE WHEN 条件1 THEN result1 WHEN 条件2 THEN result2 .... [ELSE resultn] END")]),t._v(" "),a("p",[t._v("相当于Java的 if...else if...else...")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n根据薪水判断等级\n>=20000 A\n>=15000 B\n>=10000 C\n<10000 D\n*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'D'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'薪水等级'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"case-expr-when-常量值1-then-值1-when-常量值1-then-值1-else-值n-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-expr-when-常量值1-then-值1-when-常量值1-then-值1-else-值n-end"}},[t._v("#")]),t._v(" CASE  expr WHEN 常量值1 THEN 值1 WHEN 常量值1 THEN 值1 .... [ELSE 值n] END")]),t._v(" "),a("p",[t._v("相当于Java的switch...case...")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\njob_id 为\n1 教学总监\n2 运营总监\n3 财务总监\n4 前台\n5 打酱油的\n*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       job_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" job_id\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'教学总监'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'运营总监'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'财务总监'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'前台'")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'打酱油的'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"其他函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他函数"}},[t._v("#")]),t._v(" 其他函数")]),t._v(" "),a("p",[t._v("md5(string)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'badpwd'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 7ad4cdc775b013941114aaf0022a194b")]),t._v("\n")])])]),a("h3",{attrs:{id:"_10-2-多行-分组函数-group-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-多行-分组函数-group-function"}},[t._v("#")]),t._v(" 10.2 多行/分组函数 group function")]),t._v(" "),a("p",[t._v("多行函数：对一组数据进行运算，针对一组数据（多行记录）只返回一个结果，也称分组函数。")]),t._v(" "),a("ul",[a("li",[t._v("多行函数可以写在一起。")]),t._v(" "),a("li",[t._v("多行函数会自动忽略null值。")]),t._v(" "),a("li",[t._v("多行函数不能嵌套多行函数，单行函数可以和多行函数互相嵌套。")])]),t._v(" "),a("h4",{attrs:{id:"avg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#avg"}},[t._v("#")]),t._v(" AVG()")]),t._v(" "),a("p",[t._v("对数值型数据求平均数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"sum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sum"}},[t._v("#")]),t._v(" SUM()")]),t._v(" "),a("p",[t._v("对数值型数据求和")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"max"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[t._v("#")]),t._v(" MAX()")]),t._v(" "),a("p",[t._v("对任意数据类型的数据求最大值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"min"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#min"}},[t._v("#")]),t._v(" MIN()")]),t._v(" "),a("p",[t._v("对任意数据类型的数据求最小值")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[t._v("#")]),t._v(" COUNT()")]),t._v(" "),a("p",[t._v("对任意数据类型的数据计数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 统计employee表有多少行数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n1.count(1)与count(*)得到的结果一致，包含null值。\n2.count(字段)不计算null值\n3.count(null)结果恒为0\n> https://blog.csdn.net/lwei_998/article/details/6112810\n*/")]),t._v("\n")])])]),a("p",[t._v("单行函数 嵌套多行函数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("多行函数 嵌套单行函数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_11-关联查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-关联查询"}},[t._v("#")]),t._v(" 11. 关联查询")]),t._v(" "),a("p",[t._v("又称为：联合查询，多表联查。")]),t._v(" "),a("blockquote",[a("p",[t._v("https://baike.baidu.com/item/%E7%AC%9B%E5%8D%A1%E5%B0%94%E4%B9%98%E7%A7%AF/6323173")]),t._v(" "),a("p",[t._v("笛卡尔积：")]),t._v(" "),a("p",[t._v("案例，给出三个域：")]),t._v(" "),a("p",[t._v("D1=SUPERVISOR = { 张清玫，刘逸 }")]),t._v(" "),a("p",[t._v("D2=SPECIALITY= {计算机专业，信息专业}")]),t._v(" "),a("p",[t._v("D3=POSTGRADUATE = {李勇，刘晨，王敏}")]),t._v(" "),a("p",[t._v("则D1，D2，D3的笛卡尔积为D：")]),t._v(" "),a("p",[t._v("D=D1×D2×D3 ={(张清玫, 计算机专业, 李勇), (张清玫, 计算机专业, 刘晨),")]),t._v(" "),a("p",[t._v("(张清玫, 计算机专业, 王敏), (张清玫, 信息专业, 李勇),")]),t._v(" "),a("p",[t._v("(张清玫, 信息专业, 刘晨), (张清玫, 信息专业, 王敏),")]),t._v(" "),a("p",[t._v("(刘逸, 计算机专业, 李勇), (刘逸, 计算机专业, 刘晨),")]),t._v(" "),a("p",[t._v("(刘逸, 计算机专业, 王敏), (刘逸, 信息专业, 李勇),")]),t._v(" "),a("p",[t._v("(刘逸, 信息专业, 刘晨), (刘逸, 信息专业, 王敏)}")]),t._v(" "),a("p",[t._v("这样就把D1,D2,D3这三个集合中的每个元素加以对应组合，形成庞大的集合群。")]),t._v(" "),a("p",[t._v("本个例子中的D中就会有2X2X3个元素，如果一个集合有1000个元素，有这样3个集合，他们的笛卡尔积所组成的新集合会达到十亿个元素。假若某个集合是"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%97%A0%E9%99%90%E9%9B%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("无限集"),a("OutboundLink")],1),t._v("，那么新的集合就将是有无限个元素 [2] 。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实现笛卡尔积")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_department"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 5 rows")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 25 rows")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t_department"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 125=5*25 rows")]),t._v("\n")])])])]),t._v(" "),a("h3",{attrs:{id:"_11-1-关联查询的7种结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-关联查询的7种结果"}},[t._v("#")]),t._v(" 11.1 关联查询的7种结果")]),t._v(" "),a("blockquote",[a("p",[t._v("sql joins")]),t._v(" "),a("p",[t._v("https://www.runoob.com/sql/sql-join.html")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/rayywei/blog-image/raw/master/sql-join.png",alt:""}})]),t._v(" "),a("p",[t._v("（1）A∩B")]),t._v(" "),a("p",[t._v("（2）A")]),t._v(" "),a("p",[t._v("（3）A -  A∩B")]),t._v(" "),a("p",[t._v("（4）B")]),t._v(" "),a("p",[t._v("（5）B - A∩B")]),t._v(" "),a("p",[t._v("（6）A ∪ B")]),t._v(" "),a("p",[t._v("（7）A∪B- A∩B    或者   (A -  A∩B) ∪ （B - A∩B）")]),t._v(" "),a("h3",{attrs:{id:"_11-2-内连接-inner-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-内连接-inner-join"}},[t._v("#")]),t._v(" 11.2 内连接 Inner join")]),t._v(" "),a("p",[t._v("实现A∩B")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- e 和 d 都是表的别名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n根据笛卡尔积，出现了1*5条结果，但是只有一条是正确的，即e.did=d.did\n孙红雷,8000.46,1,5,后勤部\n孙红雷,8000.46,1,2,咨询部\n孙红雷,8000.46,1,1,教学部\n孙红雷,8000.46,1,4,财务部\n孙红雷,8000.46,1,3,运营部\n*/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 所以正确的代码应该是")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- sql99: 将关联条件和筛选条件分开")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 筛选条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n或\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- sql192: 将关联条件和筛选条件使用and连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 关联条件 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" 筛选条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_11-3-外连接-outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-外连接-outer-join"}},[t._v("#")]),t._v(" 11.3 外连接 Outer Join")]),t._v(" "),a("h4",{attrs:{id:"左外连接-left-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#左外连接-left-join"}},[t._v("#")]),t._v(" 左外连接 Left Join")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现查询结果是A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 等其他子句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现A -  A∩B")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 从表关联字段 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" 等其他子句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"右外连接-right-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#右外连接-right-join"}},[t._v("#")]),t._v(" 右外连接 Right join")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现查询结果是B")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 等其他子句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现B -  A∩B")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 从表关联字段 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" 等其他子句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 这里要用e.did")]),t._v("\n")])])]),a("h4",{attrs:{id:"全外连接-full-outer-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全外连接-full-outer-join"}},[t._v("#")]),t._v(" 全外连接 Full Outer Join")]),t._v(" "),a("p",[t._v("mysql使用union代替全外连接")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现查询结果是A∪B")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#左外的A union 右外的B")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 实现A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 等其他子句\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 实现A∪B")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 实现B")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 等其他子句"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询所有员工，所有部门，包括没有员工的部门，和没有部门的员工")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现A∪B -  A∩B  或   (A -  A∩B) ∪ （B - A∩B）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用左外的 (A -  A∩B)  union 右外的（B - A∩B）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 从表关联字段 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" 等其他子句\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 关联条件\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 从表关联字段 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" 等其他子句\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询那些没有部门的员工和所有没有员工的部门")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_11-4-自连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-自连接"}},[t._v("#")]),t._v(" 11.4 自连接")]),t._v(" "),a("p",[t._v("两个关联查询的表是同一张表，通过取别名的方式来虚拟成两张表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段列表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表名 别名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" 表名 别名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 别名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("关联字段 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 别名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("的关联字段\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 其他条件\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询员工的编号，姓名，薪资和他领导的编号，姓名，薪资")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这些数据全部在员工表中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#把t_employee表，即当做员工表，又当做领导表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#领导表是虚拟的概念，我们可以通过取别名的方式虚拟")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'employee id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'employee name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'manage id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'manage name'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e1\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_employee e2\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_11-5-练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-练习"}},[t._v("#")]),t._v(" 11.5 练习")]),t._v(" "),a("p",[t._v("三张表查询")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看员工的姓名，员工的id，职位编号，职位名称，部门编号，部门名称")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_job j\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12-select语句的7大子句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-select语句的7大子句"}},[t._v("#")]),t._v(" 12. select语句的7大子句")]),t._v(" "),a("h3",{attrs:{id:"_7大子句书写顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7大子句书写顺序"}},[t._v("#")]),t._v(" 7大子句书写顺序")]),t._v(" "),a("p",[t._v("（1）from：从哪些表中筛选，已经拿到了表中的所有数据")]),t._v(" "),a("p",[t._v("（2）on：关联多表查询时，去除笛卡尔积")]),t._v(" "),a("p",[t._v("（3）where：从表中筛选的条件")]),t._v(" "),a("p",[t._v("（4）group by：分组依据")]),t._v(" "),a("p",[t._v("（5）having：在统计结果中再次筛选")]),t._v(" "),a("p",[t._v("（6）order by：排序")]),t._v(" "),a("p",[t._v("（7）limit：分页")]),t._v(" "),a("p",[t._v("必须按照（1）-（7）的顺序【编写】子句（编写顺序而不是执行顺序）。")]),t._v(" "),a("h3",{attrs:{id:"group-by与分组函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-by与分组函数"}},[t._v("#")]),t._v(" group by与分组函数")]),t._v(" "),a("p",[t._v("可以使用GROUP BY子句将表中的数据分成若干组")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据部门编号分组，找出每个组的最高薪酬额（从多个数据中挑选出一个）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 使用group by时，select后面至少需要一个分组函数。")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" group_function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v("\tgroup_by_expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("strong",[t._v("明确：WHERE语句 一定放在FROM后面 GROUP BY 前面")])])]),t._v(" "),a("p",[t._v("在SELECT列表中所有未包含在分组函数中的列都应该包含在 GROUP BY子句中")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("   department_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("     employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" department_id "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("包含在 GROUP BY 子句中的列不必包含在SELECT 列表中")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("     employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" department_id "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"使用多个列分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用多个列分组"}},[t._v("#")]),t._v(" 使用多个列分组")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("   department_id dept_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("     employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" department_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_id "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"having与分组函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#having与分组函数"}},[t._v("#")]),t._v(" having与分组函数")]),t._v(" "),a("p",[t._v("如果对分组后的结果再次筛选，需要使用having")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- having 后面可以跟group function")]),t._v("\n")])])]),a("h3",{attrs:{id:"having与where的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#having与where的区别"}},[t._v("#")]),t._v(" having与where的区别？")]),t._v(" "),a("p",[t._v("（1）where是从表中筛选的条件，而having是分组（统计）结果中再次筛选")]),t._v(" "),a("p",[t._v("（2）where后面不能加“分组/聚合函数”，而having后面可以跟分组函数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##统计部门平均工资高于8000的部门和平均工资")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("   department_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("     employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此行报错：group function is not allowed here")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" department_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#统计每一个部门，薪资高于10000元的女员工的数量，显示人数超过1人")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" gender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" salary"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"order-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-by"}},[t._v("#")]),t._v(" order by")]),t._v(" "),a("p",[t._v("order by：")]),t._v(" "),a("p",[t._v("降序：desc")]),t._v(" "),a("p",[t._v("升序：要么默认，要么加asc")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[t._v("#")]),t._v(" limit")]),t._v(" "),a("p",[t._v("limit (pageNumber - 1) * pageSize, pageSize")]),t._v(" "),a("p",[t._v("pageNumber: 页数")]),t._v(" "),a("p",[t._v("pageSize: 每页显示数量")]),t._v(" "),a("p",[t._v("代码示例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n每页显示2条 展示第三页\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 求员工的姓名，薪水，部门编号，部门名称，工作编号，工作名称，按照薪水排序，每页显示3条显示第4页")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_department d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" t_job j "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_13-子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-子查询"}},[t._v("#")]),t._v(" 13. 子查询")]),t._v(" "),a("p",[t._v("嵌套在另一个查询中的查询，根据位置不同，分为：where型，from型，exists型。注意：不管子查询在哪里，子查询必须使用()括起来。")]),t._v(" "),a("h3",{attrs:{id:"where型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where型"}},[t._v("#")]),t._v(" where型")]),t._v(" "),a("p",[t._v("①子查询是单值结果，那么可以对其使用（=，>等比较运算符）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000.67")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 将上面两句合并为一句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("②子查询是多值结果，那么可对其使用（【not】in(子查询结果)，或 >all(子查询结果)，或>=all(子查询结果)，<all(子查询结果)，<=all（子查询结果)，或 >any(子查询结果)，或>=any(子查询结果)，<any(子查询结果)，<=any（子查询结果)）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("查询全公司最高工资的员工信息\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 员工表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 薪资 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("薪资"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 员工表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 员工表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 薪资 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 员工表  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 员工编号 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询比孙红雷、黄晓明、迪丽热巴工资都高的员工。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 这三个人的工资为")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'孙红雷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'黄晓明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'迪丽热巴'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 方式一 使用max函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'孙红雷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'黄晓明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'迪丽热巴'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 方式二 不使用max函数，使用all关键字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- all 包含所有结果 > all 比所有结果都大")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'孙红雷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'黄晓明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'迪丽热巴'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询比 孙红雷 或 黄晓明 或 迪丽热巴 工资高的员工。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- any 任意一个 > any 比最小的值大即可")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ANY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'孙红雷'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'黄晓明'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'迪丽热巴'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"from型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from型"}},[t._v("#")]),t._v(" from型")]),t._v(" "),a("p",[t._v("子查询的结果是多行多列的结果，类似于一张表格。")]),t._v(" "),a("p",[t._v("必须给子查询取别名，即临时表名，表的别名不要加“”和空格。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("查询每个部门的编号，名称，平均工资\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 部门编号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 部门名称， 平均工资\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 部门表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 部门编号，"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("薪资"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 员工表  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" 部门编号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("temp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 部门表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("部门编号 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("temp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("部门编号\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 求每一个部门的平均薪水 和 部门名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 部门id和平均薪水")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 将上面的查询结果作为一张子表使用,和部门表一起得到想要的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("temp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("average_salary\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_department d\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" average_salary\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("temp")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("temp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"exists型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exists型"}},[t._v("#")]),t._v(" exists型")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("查询那些有员工的部门\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 部门编号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 部门名称 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 部门表\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 员工表  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 部门表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("部门编号 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 员工表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("部门编号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_department d\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 当员工表引用部门表的did时，说明这个部门有员工的。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" t_employee e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("did"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_14-transaction-事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-transaction-事务"}},[t._v("#")]),t._v(" 14. Transaction 事务")]),t._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("h4",{attrs:{id:"事务处理-事务操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务处理-事务操作"}},[t._v("#")]),t._v(" 事务处理（事务操作）")]),t._v(" "),a("p",[t._v("保证所有事务都作为一个工作单元来执行，即使出现了故障，都不能改变这种执行方式。当在一个事务中执行多个操作时，要么所有的事务都被提交(commit)，那么这些修改就永久地保存下来；要么数据库管理系统将放弃所作的所有修改，整个事务回滚(rollback)到最初状态。")]),t._v(" "),a("blockquote",[a("p",[t._v("例如转账操作：")]),t._v(" "),a("p",[t._v("A账户要转账给B账户，那么A账户上减少的钱数和B账户上增加的钱数必须一致，也就是说A账户的转出操作和B账户的转入操作要么全部执行，要么全不执行；")]),t._v(" "),a("p",[t._v("如果其中一个操作出现异常而没有执行的话，就会导致账户A和账户B的转入转出金额不一致的情况。而事实上这种情况是不允许发生的，所以为了防止这种情况的发生，需要使用事务处理。")])]),t._v(" "),a("h4",{attrs:{id:"事务的acid属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的acid属性"}},[t._v("#")]),t._v(" 事务的ACID属性")]),t._v(" "),a("ol",[a("li",[t._v("原子性（Atomicity）：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。")]),t._v(" "),a("li",[t._v("一致性（Consistency）:在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。")]),t._v(" "),a("li",[t._v("隔离性（Isolation）:数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。")]),t._v(" "),a("li",[t._v("持久性（Durability）:事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。")])]),t._v(" "),a("h3",{attrs:{id:"开启和结束事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启和结束事务"}},[t._v("#")]),t._v(" 开启和结束事务")]),t._v(" "),a("p",[t._v("1、用 BEGIN, ROLLBACK, COMMIT来实现")]),t._v(" "),a("ul",[a("li",[t._v("START TRANSACTION 或 BEGIN 开始一个事务")]),t._v(" "),a("li",[t._v("ROLLBACK 事务回滚")]),t._v(" "),a("li",[t._v("COMMIT 事务确认")])]),t._v(" "),a("p",[t._v("2、直接用 SET 来改变 MySQL 的自动提交模式:")]),t._v(" "),a("ul",[a("li",[t._v("SET AUTOCOMMIT=0/FALSE 禁止自动提交，开启事务")]),t._v(" "),a("li",[t._v("SET AUTOCOMMIT=1/TRUE 开启自动提交，关闭事务")])]),t._v(" "),a("p",[t._v("3、注意：")]),t._v(" "),a("p",[t._v("事务的回滚只对DML语句（数据的增删改查）有效，对于DDL语句无效。")]),t._v(" "),a("p",[t._v("4、mysql默认是自动提交，执行一句就提交一句。")]),t._v(" "),a("p",[t._v("即默认情况下，每一条sql都是一个独立的sql。")]),t._v(" "),a("h3",{attrs:{id:"事务隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别"}},[t._v("#")]),t._v(" 事务隔离级别")]),t._v(" "),a("h4",{attrs:{id:"_1、事务并发问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、事务并发问题"}},[t._v("#")]),t._v(" 1、事务并发问题")]),t._v(" "),a("p",[t._v("对于同时运行的多个事务, 当这些事务访问数据库中相同的数据时, 如果没有采取必要的隔离机制, 就会导致各种并发问题:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("脏读")]),t._v(": 对于两个事务 T1, T2, T1 读取了已经被 T2 更新但还"),a("strong",[t._v("没有被提交")]),t._v("的字段。 之后, 若 T2 回滚, T1读取的内容就是临时且无效的。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/Users/raywei/Desktop/%E5%B0%9A%E7%A1%85%E8%B0%B7/%E6%BA%90%E7%A0%81%E4%B8%8E%E7%AC%94%E8%AE%B0/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/day024mysql01/%E7%AC%94%E8%AE%B0/imgs%5C1599461151424.png",alt:"1599461151424"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("不可重复读")]),t._v(": 对于两个事务T1, T2, T1 读取了一个字段, 然后 T2 "),a("strong",[t._v("更新/修改")]),t._v("了该字段。 之后, T1再次读取同一个字段, 值就不同了。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/Users/raywei/Desktop/%E5%B0%9A%E7%A1%85%E8%B0%B7/%E6%BA%90%E7%A0%81%E4%B8%8E%E7%AC%94%E8%AE%B0/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/day024mysql01/%E7%AC%94%E8%AE%B0/imgs%5C1599461170319.png",alt:"1599461170319"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("幻读")]),t._v(": 对于两个事务T1, T2, T1 从一个表中读取了一个字段, 然后 T2 在该表中"),a("strong",[t._v("插入/删除")]),t._v("了一些新的行。 之后, 如果 T1 再次读取同一个表, 就会多/少几行。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/Users/raywei/Desktop/%E5%B0%9A%E7%A1%85%E8%B0%B7/%E6%BA%90%E7%A0%81%E4%B8%8E%E7%AC%94%E8%AE%B0/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/day024mysql01/%E7%AC%94%E8%AE%B0/imgs%5C1599461184631.png",alt:"1599461184631"}})]),t._v(" "),a("p",[a("em",[a("strong",[t._v("不可重复度和幻读区别：")])])]),t._v(" "),a("p",[t._v("不可重复读的重点是修改，幻读的重点在于新增或者删除。")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表")])])]),t._v(" "),a("p",[t._v("例1（同样的条件, 你读取过的数据, 再次读取出来发现值不一样了 ）：事务1中的A先生读取自己的工资为 1000的操作还没完成，事务2中的B先生就修改了A的工资为2000，导致A再读自己的工资时工资变为 2000；这就是不可重复读。")]),t._v(" "),a("p",[t._v("例2（同样的条件, 第1次和第2次读出来的记录数不一样 ）：假某工资单表中工资大于3000的有4人，事务1读取了所有工资大于3000的人，共查到4条记录，这时事务2 又插入了一条工资大于3000的记录，事务1再次读取时查到的记录就变为了5条，这样就导致了幻读")]),t._v(" "),a("h4",{attrs:{id:"_2、事务隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、事务隔离级别"}},[t._v("#")]),t._v(" 2、事务隔离级别")]),t._v(" "),a("p",[a("strong",[t._v("数据库事务的隔离性")]),t._v("：数据库系统必须具有隔离并发运行各个事务的能力, 使它们不会相互影响, 避免各种并发问题。**一个事务与其他事务隔离的程度称为隔离级别。**数据库规定了多种事务隔离级别, 不同隔离级别对应不同的干扰程度, 隔离级别越高, 数据一致性就越好, 但并发性越弱。")]),t._v(" "),a("p",[a("strong",[t._v("数据库提供的 4 种事务隔离级别：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("隔离级别")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("read-uncommitted")]),t._v(" "),a("td",[t._v("允许A事务读取其他事务未提交和已提交的数据。会出现***脏读、不可重复读、幻读***问题")])]),t._v(" "),a("tr",[a("td",[t._v("read-committed")]),t._v(" "),a("td",[t._v("只允许A事务读取其他事务已提交的数据。可以避免脏读，但仍然会出现***不可重复读、幻读***问题")])]),t._v(" "),a("tr",[a("td",[t._v("repeatable-read")]),t._v(" "),a("td",[t._v("确保事务可以多次从一个字段中读取相同的值。在这个事务持续期间，禁止其他事务对这个字段进行更新。可以避免脏读和不可重复读。但是幻读问题仍然存在。"),a("br"),t._v("mysql中，此项已经解决幻读。")])]),t._v(" "),a("tr",[a("td",[t._v("serializable")]),t._v(" "),a("td",[t._v("确保事务可以从一个表中读取相同的行，相同的记录。在这个事务持续期间，禁止其他事务对该表执行插入、更新、删除操作。所有并发问题都可以避免，但性能十分低下。")])])])]),t._v(" "),a("ul",[a("li",[t._v("Oracle 支持的 2 种事务隔离级别："),a("strong",[t._v("READ-COMMITED")]),t._v(", SERIALIZABLE。 Oracle 默认的事务隔离级别为: READ COMMITED 。")]),t._v(" "),a("li",[t._v("Mysql 支持 4 种事务隔离级别。 Mysql 默认的事务隔离级别为: "),a("strong",[t._v("REPEATABLE-READ")]),t._v("。在mysql中REPEATABLE READ的隔离级别也可以避免幻读了。")])]),t._v(" "),a("h4",{attrs:{id:"_3、设置和查看隔离级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、设置和查看隔离级别"}},[t._v("#")]),t._v(" 3、设置和查看隔离级别")]),t._v(" "),a("p",[t._v("每启动一个 mysql 程序, 就会获得一个单独的数据库连接。每个数据库连接都有一个变量 @@tx_isolation, 表示当前连接的事务隔离级别。mysql服务也有一个全局变量@@global.tx_isolation，表示所有连接的默认事务隔离级别。")]),t._v(" "),a("p",[t._v("查看当前mysql连接的隔离级别:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 8.0.18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@transaction_isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 或")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" VARIABLES "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%iso%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 5.7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@tx_isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("查看全局的隔离级别：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 8.0.18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@global.transaction_isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 5.7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@global.tx_isolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("设置当前 mysql连接的隔离级别:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 8.0.18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMITTED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 5.7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" tx_isolation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'repeatable-read'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("设置数据库系统的全局的隔离级别（下次会话生效）:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 8.0.18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ISOLATION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEVEL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMITTED")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# version 5.7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" tx_isolation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'read-committed'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("注意：这里的隔离级别中间是减号，不是下划线。")])]),t._v(" "),a("h2",{attrs:{id:"_15-用户与权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-用户与权限"}},[t._v("#")]),t._v(" 15. 用户与权限")]),t._v(" "),a("p",[t._v("用户")]),t._v(" "),a("p",[t._v("公司职员（根据岗位分配角色）")]),t._v(" "),a("p",[t._v("角色：权限的集合 （mysql8才有）")]),t._v(" "),a("p",[t._v("经理，财务，人事。")]),t._v(" "),a("p",[t._v("权限")]),t._v(" "),a("p",[t._v("查看数据、修改数据等")]),t._v(" "),a("h3",{attrs:{id:"身份认证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#身份认证"}},[t._v("#")]),t._v(" 身份认证")]),t._v(" "),a("p",[t._v("（1）IP+用户名作为身份验证")]),t._v(" "),a("p",[t._v("​\t例如：")]),t._v(" "),a("p",[t._v("​        root@localhost：只允许在本机使用root用户登录")]),t._v(" "),a("p",[t._v("​\t\troot@%：运行在任意机器上使用root用户登录")]),t._v(" "),a("p",[t._v("​\t\troot@192.168.11.56：只运行在192.168.11.56这个ip的主机上使用root用户登录")]),t._v(" "),a("p",[t._v("​\t\tgjz@%：运行在任意机器上使用gjz用户登录")]),t._v(" "),a("blockquote",[a("p",[t._v("建立用户时，用于身份验证的IP地址，是连接你的服务的客户端的IP地址")]),t._v(" "),a("p",[t._v("例如：root@192.168.11.56，表示客户端在192.168.11.56的机器上可以访问你的mysql服务")]),t._v(" "),a("p",[t._v("而这个客户端，要连接你的服务时，-h后面的主机的IP地址是，服务器所在的机器的IP地址。")]),t._v(" "),a("p",[t._v("例如：mysql服务在192.168.11.11机器上，客户端在192.168.11.56上，那么客户端可以用root@192.168.11.56或root@%，连接时填写mysql -h192.168.11.11 -u root -p密码")])]),t._v(" "),a("p",[t._v("（2）密码")]),t._v(" "),a("h3",{attrs:{id:"分配权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分配权限"}},[t._v("#")]),t._v(" 分配权限")]),t._v(" "),a("h4",{attrs:{id:"_1、用户权限有4个权限级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、用户权限有4个权限级别"}},[t._v("#")]),t._v(" 1、用户权限有4个权限级别")]),t._v(" "),a("p",[t._v("（1）全局")]),t._v(" "),a("p",[t._v("（2）数据库")]),t._v(" "),a("p",[t._v("（3）表")]),t._v(" "),a("p",[t._v("（4）字段")]),t._v(" "),a("p",[t._v("依次校验权限，如果前面通过了，后面就不校验了：")]),t._v(" "),a("p",[t._v("全局 > 数据库 > 表 > 字段")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：root@localhost，这个用户始终保留所有的全局权限。")])]),t._v(" "),a("h4",{attrs:{id:"_2、查看账户权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看账户权限"}},[t._v("#")]),t._v(" 2、查看账户权限")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("show grants for '用户名'@'主机IP地址';\n")])])]),a("h4",{attrs:{id:"_3、新建用户和删除用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、新建用户和删除用户"}},[t._v("#")]),t._v(" 3、新建用户和删除用户")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Users/raywei/Desktop/%E5%B0%9A%E7%A1%85%E8%B0%B7/%E6%BA%90%E7%A0%81%E4%B8%8E%E7%AC%94%E8%AE%B0/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/day024mysql01/%E7%AC%94%E8%AE%B0/imgs/1561009788685.png",alt:"1561009788685"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/Users/raywei/Desktop/%E5%B0%9A%E7%A1%85%E8%B0%B7/%E6%BA%90%E7%A0%81%E4%B8%8E%E7%AC%94%E8%AE%B0/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/day024mysql01/%E7%AC%94%E8%AE%B0/imgs/1561009769163.png",alt:"1561009769163"}})]),t._v(" "),a("p",[t._v("对应的语句：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE USER '用户名'@'主机IP地址' IDENTIFIED BY '123456';\n")])])]),a("blockquote",[a("p",[t._v("如果主机IP地址写：")]),t._v(" "),a("p",[t._v("（1）192.168.29.53，就仅限于在该IP登录")]),t._v(" "),a("p",[t._v("（2）%，就表示可以从任意IP登录")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("drop user '用户名'@'主机IP地址';\n")])])]),a("h4",{attrs:{id:"_4、授予和收回权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、授予和收回权限"}},[t._v("#")]),t._v(" 4、授予和收回权限")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Users/raywei/Desktop/%E5%B0%9A%E7%A1%85%E8%B0%B7/%E6%BA%90%E7%A0%81%E4%B8%8E%E7%AC%94%E8%AE%B0/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/2.%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/day024mysql01/%E7%AC%94%E8%AE%B0/imgs/1561009821823.png",alt:"1561009821823"}})]),t._v(" "),a("p",[t._v("对应语句：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#某个库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("表格 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#某个库的某个表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#某个表的字段")]),t._v("\n")])])]),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gao'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'192.168.29.53'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gao'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'192.168.29.53'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("t_department"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gao'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'192.168.29.53'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("t_department"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gao'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'192.168.29.53'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GRANT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("1101db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("course"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gao'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'192.168.29.30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("收回权限：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("revoke")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("revoke")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("revoke")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("表格 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("revoke")]),t._v(" 权限列表 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'用户名'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'主机IP地址'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);