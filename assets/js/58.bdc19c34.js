(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{619:function(t,l,v){"use strict";v.r(l);var _=v(17),e=Object(_.a)({},(function(){var t=this,l=t.$createElement,v=t._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"四、数据结构和算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、数据结构和算法"}},[t._v("#")]),t._v(" 四、数据结构和算法")]),t._v(" "),v("ul",[v("li",[t._v("简单的数据结构（栈、队列、链表、数组、哈希表）")]),t._v(" "),v("li",[t._v("树（二叉树、字典树、平衡树、排序树、B 树、B+     树、R 树、红黑树、多路树）")]),t._v(" "),v("li",[t._v("堆")]),t._v(" "),v("li",[t._v("图（拓扑、有向图、无向图）")]),t._v(" "),v("li",[t._v("稳定的排序算法（冒泡排序、插入排序、鸡尾酒排序、桶排序、计数排序、归并排序、原地归并排序、二叉排序树排序、鸽巢排序、基数排序、侏儒排序、图书馆排序、块排序）")]),t._v(" "),v("li",[t._v("不稳定的排序算法（选择排序、希尔排序、梳排序、堆排序、平滑排序、快速排序、内省排序、耐心排序、Clover 排序）")]),t._v(" "),v("li",[t._v("时间复杂度")]),t._v(" "),v("li",[t._v("空间复杂度")]),t._v(" "),v("li",[t._v("贪心算法")]),t._v(" "),v("li",[t._v("KMP 算法")])])])}),[],!1,null,null,null);l.default=e.exports}}]);