(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{617:function(t,e,l){"use strict";l.r(e);var s=l(17),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"三、设计模式"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#三、设计模式"}},[t._v("#")]),t._v(" 三、设计模式")]),t._v(" "),l("ul",[l("li",[t._v("设计模式的六大原则")]),t._v(" "),l("li",[t._v("创建型设计模式（单例、抽象工厂、建造者、工厂、原型）")]),t._v(" "),l("li",[t._v("结构型设计模式（适配器、桥接、装饰、组合、外观、享元、代理）")]),t._v(" "),l("li",[t._v("行为型设计模式（模板方法、命令、迭代器、观察者、中介者、备忘录、解释器、状态、策略、责任链、访问者）")]),t._v(" "),l("li",[t._v("单例的七种写法")])])])}),[],!1,null,null,null);e.default=n.exports}}]);